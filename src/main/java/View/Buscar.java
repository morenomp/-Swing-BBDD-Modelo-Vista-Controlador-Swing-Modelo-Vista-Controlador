/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import static Controller.Controlador.*;
import DAO_Controller.DAOSQL;
import Excepcion.DAO_Excep;
import Model.*;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
DATO:
    ¿Que hace info.setText?
    Digamos que establece el texto que se muestra en un componente JTextPane.
*/

public class Buscar extends javax.swing.JDialog {

    boolean ejecutaUsuario = false;
    /**
     * Creates new form Baja
     */
    public Buscar(javax.swing.JFrame parent, boolean modal) throws DAO_Excep {
        super(parent, modal);
        
        System.out.println("[OK] Abriendo el JDialog de Buscar");
        
        //Cambiar color de fondo
        getContentPane().setBackground(new Color(0, 24, 78));
        
        setIconImage(new ImageIcon(getClass().getResource("/imgs/inicio.png")).getImage());
        
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        
        System.out.println("[OK] Componentes inicializados correctamente");
        
        DAOSQL daoBuscar = new DAOSQL();
        
        nombreslista.removeAllItems();
        info.setText("");
        if (filtro.getSelectedItem().toString().equals("Humano")) {
            for (Ser s : daoBuscar.readSer()) {
                if (s instanceof Humano) {
                    nombreslista.addItem(s.getName());
                }
            }
        }
        if(daoBuscar.getSer(new Ser((String)nombreslista.getSelectedItem())) != null)
            info.setText(daoBuscar.getSer(new Ser((String)nombreslista.getSelectedItem())).toString() + 
                    "\n" + daoBuscar.getPlanetaSer(new Ser((String)nombreslista.getSelectedItem())));
        ejecutaUsuario = true;
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        nombreslista = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        info = new javax.swing.JTextPane();
        filtro = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        salir1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1026, 733));
        setPreferredSize(new java.awt.Dimension(1026, 733));
        setSize(new java.awt.Dimension(300, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("NOMBRE:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, -1, -1));

        nombreslista.setBackground(new java.awt.Color(79, 79, 79));
        nombreslista.setForeground(new java.awt.Color(255, 255, 0));
        nombreslista.setBorder(null);
        nombreslista.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nombreslistaItemStateChanged(evt);
            }
        });
        getContentPane().add(nombreslista, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 120, -1));

        info.setEditable(false);
        info.setBackground(new java.awt.Color(45, 45, 45));
        info.setBorder(null);
        info.setForeground(new java.awt.Color(255, 255, 0));
        jScrollPane1.setViewportView(info);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, 200, 230));

        filtro.setBackground(new java.awt.Color(79, 79, 79));
        filtro.setForeground(new java.awt.Color(255, 255, 0));
        filtro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Humano", "Andoriano", "Ferengi", "Klingon", "Nibiriano", "Vulcaniano" }));
        filtro.setBorder(null);
        filtro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filtroItemStateChanged(evt);
            }
        });
        getContentPane().add(filtro, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, 120, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("FILTRO:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, -1, -1));

        salir1.setBackground(new java.awt.Color(255, 250, 250));
        salir1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        salir1.setForeground(new java.awt.Color(51, 51, 51));
        salir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/salir 2.jpg"))); // NOI18N
        salir1.setBorder(null);
        salir1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir1ActionPerformed(evt);
            }
        });
        getContentPane().add(salir1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 600, -1, 80));

        jLabel9.setBackground(new java.awt.Color(0, 24, 78));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/panel de control.jpg"))); // NOI18N
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 1020, 420));

        jLabel7.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/listBeingPlanets.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filtroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filtroItemStateChanged
        
        ejecutaUsuario = false;
        nombreslista.removeAllItems();
        info.setText("");
        DAOSQL daoFilter = new DAOSQL();
        
        try {
            //Recorreremos todos los seres de la bbdd y añadiremos al JComboBox
            //"nombreslista" los que coincidan con los que el usuario seleccionó
            for (Ser s : daoFilter.readSer()) {
                
                switch (filtro.getSelectedItem().toString()) {
                    
                    case "Humano":
                        if (s instanceof Humano) nombreslista.addItem(s.getName());
                        break;
                        
                    case "Andoriano":
                        if (s instanceof Andoriano) nombreslista.addItem(s.getName());
                        break;
                        
                    case "Ferengi":
                        if (s instanceof Ferengi) nombreslista.addItem(s.getName());
                        break;
                        
                    case "Klingon":
                        if (s instanceof Klingon) nombreslista.addItem(s.getName());
                        break;
                        
                    case "Nibiriano":
                        if (s instanceof Nibiriano) nombreslista.addItem(s.getName());
                        break;
                        
                    case "Vulcaniano":
                        if (s instanceof Vulcaniano) nombreslista.addItem(s.getName());
                        break;
                }
            }
        
            try {
                //Obtendremos el nombre seleccionado de "nombreslista"
                String seleccionado = (String) nombreslista.getSelectedItem();

                //SI hay un nombre seleccionado, sigue
                if (seleccionado != null) {
                    
                    //Buscaremos el Ser
                    Ser serEncontrado = daoFilter.getSer(new Ser(seleccionado));

                    if (serEncontrado != null) {
                        info.setText(serEncontrado.toString() + "\n" + daoFilter.getPlanetaSer(serEncontrado));
                    } else {
                        info.setText("No se encontró el ser en la base de datos.");
                    }
                }

                /*
                if(daoFilter.getSer(new Ser((String)nombreslista.getSelectedItem())) != null)
                    info.setText(daoFilter.getSer(new Ser((String)nombreslista.getSelectedItem())).toString() +
                            "\n" + daoFilter.getPlanetaSer(new Ser((String)nombreslista.getSelectedItem())));
                */
            } catch (DAO_Excep ex) {
                Logger.getLogger(Buscar.class.getName()).log(Level.SEVERE, null, ex);
                info.setText("Error al buscar el ser.");
            }
        } catch (DAO_Excep ex) {
            Logger.getLogger(Buscar.class.getName()).log(Level.SEVERE, null, ex);
        }
        ejecutaUsuario = true;
    }//GEN-LAST:event_filtroItemStateChanged

    private void nombreslistaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nombreslistaItemStateChanged
        if (!ejecutaUsuario) {

        } else {
            
            DAOSQL daoFilter = new DAOSQL();
            //Agregaremos un "DAOSQL" para buscar la siguiente información:
            //      |
            //      |- Buscar información del Ser (getSer) linea 294
            //      |
            //      |_ Buscar el planeta al que pertenece ese Ser (getPlanetaSer) linea 295
            
            info.setText("");
            try {
                info.setText(daoFilter.getSer(new Ser((String)nombreslista.getSelectedItem())).toString() +
                        "\n" + daoFilter.getPlanetaSer(new Ser((String)nombreslista.getSelectedItem())));
            } catch (DAO_Excep ex) {
                Logger.getLogger(Buscar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_nombreslistaItemStateChanged

    private void salir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_salir1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Baja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Baja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Baja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Baja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Buscar dialog = new Buscar(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (DAO_Excep ex) {
                    ex.printStackTrace(); // Muestra el error en consola
                    JOptionPane.showMessageDialog(null, "Error al abrir la ventana Baja:\n" + ex.getMessage());
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> filtro;
    private javax.swing.JTextPane info;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> nombreslista;
    private javax.swing.JButton salir1;
    // End of variables declaration//GEN-END:variables
}
